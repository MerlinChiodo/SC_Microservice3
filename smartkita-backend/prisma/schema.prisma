generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Schwerpunkt {
  OFFENES_KONZEPT
  TEILOFFENES_KONZEPT
  REGGIO
  MONTESSORI
  WALDORF
  BEWEGUNG
  TIERGESTUETZT
}

enum Traeger {
  EVANGELISCH
  KATHOLISCH
  DRK
  KOMMUNAL
  PRIVAT
}

enum Dateiformat {
  PDF
}

enum Dokumententyp {
  BESCHAEFTIGUNGSNACHWEIS
  VORSORGEHEFT
  IMPFPASS
}

enum Rolle {
  VERWALTUNG
  ERZIEHUNG
  ADMIN
}

enum Antragstatus {
  EINGEGANGEN
  ANGENOMMEN
  AKZEPTIERT
  ABGELEHNT
  UNVOLLSTAENDIG
}

model Antrag {
  id_antrag  Int      @id @default(autoincrement())
  // m-n relation
  dokument Dokument[]
  // 1-n relation
  id_einrichtung Int? 
  einrichtung Einrichtung? @relation(fields: [id_einrichtung], references: [id_einrichtung])
  id_kind Int
  kind Kind @relation(fields: [id_kind], references: [id_kind])
  id_ezb Int
  erziehungsberechtigte Erziehungsberechtigte @relation(fields: [id_ezb], references: [id_ezb])
  // Attributes
  datum      DateTime @default(now()) @db.DateTime(0)
  prioritaet Int
  status     Antragstatus
  betreuungsstunden Int
  bemerkung String?
}

model Vertrag {
  id_vertrag Int @id @default(autoincrement())
  id_einrichtung Int
  einrichtung Einrichtung @relation(fields: [id_einrichtung], references: [id_einrichtung])
  id_kind Int
  kind Kind @relation(fields: [id_kind], references: [id_kind])
  id_ezb Int
  erziehungsberechtigte Erziehungsberechtigte @relation(fields: [id_ezb], references: [id_ezb])
  // Attributes
  beginn DateTime @db.Date
  ende DateTime @db.Date
  betreuungsstunden Int
  bemerkung String?
}

model Einrichtung {
  id_einrichtung       Int     @id @default(autoincrement())
  bilder Bild[]
  antrag Antrag[]
  vertrag Vertrag[]
  smartcity_teilnehmer Boolean
  name String
  traeger String
  traeger_kategorie Traeger
  strasse String
  hausnr Int
  plz Int
  email String?
  url_website String?
  betreuungsplaetze Int?
  kindalter_von Int?
  kindalter_bis Int?
  schwerpunkt Schwerpunkt?
  kurzbeschreibung String @db.VarChar(500)
  beschreibung String? @db.VarChar(5000)
  termine String? @db.VarChar(2000)
}

model Kind {
  id_kind Int @id @default(autoincrement())
  id_einrichtung Int?
  vertrag Vertrag[]
  antrag Antrag[]
  // Attributes
  smartcity_id Int?
  vorname String?
  nachname String?
  geburtsdatum DateTime? @db.Date()
  strasse String?
  hausnr String?
}

model Erziehungsberechtigte {
  id_ezb Int @id @default(autoincrement())
  vertrag Vertrag[]
  antrag Antrag[]
  dokument Dokument[]
  // Attributes
  smartcity_id Int? // registered users store *only* smartcity_id
  vorname String? // unregistered users store this and all following attributes
  nachname String?
  geburtsdatum DateTime? @db.Date()
  strasse String?
  hausnr String?
  email String?
  telefonnr Int?
}

model Bild {
  id_bild Int @id @default(autoincrement())
  // 1-n relation
  id_einrichtung Int?
  einrichtung Einrichtung? @relation(fields: [id_einrichtung], references: [id_einrichtung])
  path String
}

model Dokument {
  id_dokument Int @id @default(autoincrement())
  id_ezb Int
  id_antrag Int?
  erziehungsberechtigte Erziehungsberechtigte @relation(fields: [id_ezb], references: [id_ezb])
  antrag Antrag[]
  // Attributes
  path_fileserver String
  datum_upload DateTime @default(now()) @db.DateTime(0)
  dateiformat Dateiformat
  typ Dokumententyp?
}

model Mitarbeitende {
  id_mitarbeitende Int @id @default(autoincrement())
  vorname String
  nachname String
  email String
  passwort String
  rolle Rolle
}